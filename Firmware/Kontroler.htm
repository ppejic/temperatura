<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Kontroler.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Kontroler.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Mon Mar 31 00:01:27 2014
<BR><P>
<H3>Maximum Stack Usage =         64 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Chip_ADS1248_WriteRegister &rArr; Chip_SSP_RWFrames_Blocking &rArr; SSP_Read2BFifo
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3c]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[15]">Reserved_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">Reserved_IRQHandler</a><BR>
 <LI><a href="#[20]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[20]">ADC_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[22]">BOD_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[b]">FLEX_INT0_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[c]">FLEX_INT1_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[d]">FLEX_INT2_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[e]">FLEX_INT3_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[f]">FLEX_INT4_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[10]">FLEX_INT5_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[11]">FLEX_INT6_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[12]">FLEX_INT7_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[23]">FMC_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[13]">GINT0_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[14]">GINT1_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[17]">I2C_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[25]">IOH_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[15]">Reserved_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced 6 times from startup_lpc11uxx.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1c]">SSP0_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[16]">SSP1_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(.text)
 <LI><a href="#[18]">TIMER16_0_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[19]">TIMER16_1_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1a]">TIMER32_0_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1b]">TIMER32_1_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1d]">UART_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[24]">USBWakeup_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1f]">USB_FIQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1e]">USB_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[21]">WDT_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[28]">__main</a> from __main.o(!!!main) referenced from startup_lpc11uxx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[29]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[66]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[67]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[68]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[30]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[69]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[70]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[71]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[72]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[73]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[74]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[75]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[76]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[77]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[78]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[79]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[35]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[7d]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[7e]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[7f]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[80]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[81]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[82]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[2a]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[83]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2d]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2f]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[84]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[31]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Chip_ADS1248_WriteRegister &rArr; Chip_SSP_RWFrames_Blocking &rArr; SSP_Read2BFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[3e]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[34]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[86]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[36]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[32]"></a>main</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = main &rArr; Chip_ADS1248_WriteRegister &rArr; Chip_SSP_RWFrames_Blocking &rArr; SSP_Read2BFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>Reserved_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>FLEX_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>FLEX_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FLEX_INT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLEX_INT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>FLEX_INT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>FLEX_INT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLEX_INT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FLEX_INT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>IOH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER16_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIMER16_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIMER32_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER32_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>UART_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>USBWakeup_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USB_FIQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[87]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[33]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[8a]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[8b]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[8c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>Chip_Clock_GetMainClockRate</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, clock_11xx.o(i.Chip_Clock_GetMainClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTOSCRate
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_SetBitRate
</UL>

<P><STRONG><a name="[41]"></a>Chip_Clock_GetSystemPLLInClockRate</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, clock_11xx.o(i.Chip_Clock_GetSystemPLLInClockRate))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[40]"></a>Chip_Clock_GetSystemPLLOutClockRate</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, clock_11xx.o(i.Chip_Clock_GetSystemPLLOutClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_Clock_GetSystemPLLOutClockRate
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetPLLFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[42]"></a>Chip_Clock_GetWDTOSCRate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, clock_11xx.o(i.Chip_Clock_GetWDTOSCRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_Clock_GetWDTOSCRate
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[46]"></a>Chip_GPIO_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio_11xx_1.o(i.Chip_GPIO_Init))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_Init
</UL>

<P><STRONG><a name="[38]"></a>Chip_ADS1248_Init</STRONG> (Thumb, 380 bytes, Stack size 8 bytes, ads1248.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Chip_ADS1248_Init &rArr; Chip_SSP_Init &rArr; Chip_SSP_SetBitRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_SetClockRate
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_DeInit
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_IOCON_PinMuxSet
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_SetPinOutHigh
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_SetPinDIROutput
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>Chip_ADS1248_ReadRegister</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, ads1248.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Chip_ADS1248_ReadRegister &rArr; Chip_SSP_RWFrames_Blocking &rArr; SSP_Read2BFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_RWFrames_Blocking
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_SetPinOutLow
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_SetPinOutHigh
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_BufferInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetIDAC2
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetIDAC1
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetIdacValue
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetSPS
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetPGA
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_MuxCal
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetVrefInput
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetInternalVref
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetBurnout
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetPositiveInput
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetNegativeInput
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>Chip_ADS1248_WriteRegister</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, ads1248.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Chip_ADS1248_WriteRegister &rArr; Chip_SSP_RWFrames_Blocking &rArr; SSP_Read2BFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_RWFrames_Blocking
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_SetPinOutLow
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_SetPinOutHigh
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_BufferInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetIDAC2
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetIDAC1
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetIdacValue
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetSPS
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetPGA
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_MuxCal
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetVrefInput
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetInternalVref
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetBurnout
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetPositiveInput
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetNegativeInput
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_SetVBIAS
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>Chip_ADS1248_SetVBIAS</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ads1248.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
</UL>

<P><STRONG><a name="[50]"></a>Chip_ADS1248_SetNegativeInput</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, ads1248.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[51]"></a>Chip_ADS1248_SetPositiveInput</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, ads1248.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[52]"></a>Chip_ADS1248_SetBurnout</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ads1248.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[8f]"></a>Chip_ADS1248_GetClkStat</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ads1248.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>Chip_ADS1248_SetInternalVref</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ads1248.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[54]"></a>Chip_ADS1248_SetVrefInput</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ads1248.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[55]"></a>Chip_ADS1248_MuxCal</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, ads1248.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[56]"></a>Chip_ADS1248_SetPGA</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ads1248.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[57]"></a>Chip_ADS1248_SetSPS</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ads1248.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[58]"></a>Chip_ADS1248_SetIdacValue</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, ads1248.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[59]"></a>Chip_ADS1248_SetIDAC1</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ads1248.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[5a]"></a>Chip_ADS1248_SetIDAC2</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ads1248.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[90]"></a>Chip_ADS1248_GetData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ads1248.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 368 bytes, Stack size 8 bytes, system_lpc11uxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>

<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, system_lpc11uxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(.text)
</UL>
<P><STRONG><a name="[91]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTOSCRate
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_SetBitRate
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[92]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>Chip_IOCON_PinMuxSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, iocon_11xx.o(i.Chip_IOCON_PinMuxSet))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_Init
</UL>

<P><STRONG><a name="[45]"></a>Chip_SSP_DeInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ssp_11xx.o(i.Chip_SSP_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_SSP_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_SetSSPClkDivider
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_GetClockIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_Init
</UL>

<P><STRONG><a name="[4a]"></a>Chip_SSP_Init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ssp_11xx.o(i.Chip_SSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Chip_SSP_Init &rArr; Chip_SSP_SetBitRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_SetBitRate
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_SetSSPClkDivider
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_GetClockIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_Init
</UL>

<P><STRONG><a name="[4e]"></a>Chip_SSP_RWFrames_Blocking</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, ssp_11xx.o(i.Chip_SSP_RWFrames_Blocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Chip_SSP_RWFrames_Blocking &rArr; SSP_Read2BFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Write2BFifo
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Write1BFifo
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Read2BFifo
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Read1BFifo
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_GetStatus
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_GetRawIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[5f]"></a>Chip_SSP_SetBitRate</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ssp_11xx.o(i.Chip_SSP_SetBitRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Chip_SSP_SetBitRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_SetClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_Init
</UL>

<P><STRONG><a name="[4b]"></a>Chip_SSP_SetClockRate</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ssp_11xx.o(i.Chip_SSP_SetClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_SSP_SetClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_SetBitRate
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_Init
</UL>

<P><STRONG><a name="[5c]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_lpc11uxx.o(i.__ARM_common_switch8), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[48]"></a>Chip_GPIO_SetPinDIROutput</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, ads1248.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Chip_GPIO_SetPinDIROutput
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_Init
</UL>

<P><STRONG><a name="[4c]"></a>Chip_ADS1248_BufferInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ads1248.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[49]"></a>Chip_GPIO_SetPinOutHigh</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, ads1248.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Chip_GPIO_SetPinOutHigh
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_Init
</UL>

<P><STRONG><a name="[4d]"></a>Chip_GPIO_SetPinOutLow</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, ads1248.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Chip_GPIO_SetPinOutLow
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_WriteRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_ADS1248_ReadRegister
</UL>

<P><STRONG><a name="[5d]"></a>Chip_SSP_GetClockIndex</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ssp_11xx.o(i.Chip_SSP_GetClockIndex))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_DeInit
</UL>

<P><STRONG><a name="[62]"></a>Chip_SSP_GetRawIntStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssp_11xx.o(i.Chip_SSP_GetRawIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_RWFrames_Blocking
</UL>

<P><STRONG><a name="[60]"></a>Chip_SSP_GetStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssp_11xx.o(i.Chip_SSP_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Read2BFifo
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Read1BFifo
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_RWFrames_Blocking
</UL>

<P><STRONG><a name="[5e]"></a>Chip_SSP_SetSSPClkDivider</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ssp_11xx.o(i.Chip_SSP_SetSSPClkDivider))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_DeInit
</UL>

<P><STRONG><a name="[65]"></a>SSP_Read1BFifo</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ssp_11xx.o(i.SSP_Read1BFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SSP_Read1BFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_RWFrames_Blocking
</UL>

<P><STRONG><a name="[63]"></a>SSP_Read2BFifo</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ssp_11xx.o(i.SSP_Read2BFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SSP_Read2BFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_RWFrames_Blocking
</UL>

<P><STRONG><a name="[64]"></a>SSP_Write1BFifo</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ssp_11xx.o(i.SSP_Write1BFifo))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_RWFrames_Blocking
</UL>

<P><STRONG><a name="[61]"></a>SSP_Write2BFifo</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ssp_11xx.o(i.SSP_Write2BFifo))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SSP_RWFrames_Blocking
</UL>

<P><STRONG><a name="[43]"></a>Chip_Clock_GetPLLFreq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, clock_11xx.o(i.Chip_Clock_GetPLLFreq))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3d]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
